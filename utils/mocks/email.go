// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// EmailSenderInterface is an autogenerated mock type for the EmailSenderInterface type
type EmailSenderInterface struct {
	mock.Mock
}

// QueueEmail provides a mock function with given fields: _a0, otp
func (_m *EmailSenderInterface) QueueEmail(_a0 string, otp string) error {
	ret := _m.Called(_a0, otp)

	if len(ret) == 0 {
		panic("no return value specified for QueueEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(_a0, otp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Worker provides a mock function with given fields:
func (_m *EmailSenderInterface) Worker() {
	_m.Called()
}

// sendEmail provides a mock function with given fields: _a0, otp
func (_m *EmailSenderInterface) SendEmail(_a0 string, otp string) error {
	ret := _m.Called(_a0, otp)

	if len(ret) == 0 {
		panic("no return value specified for sendEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(_a0, otp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEmailSenderInterface creates a new instance of EmailSenderInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmailSenderInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmailSenderInterface {
	mock := &EmailSenderInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
